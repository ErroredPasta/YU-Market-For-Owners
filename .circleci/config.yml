# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  android: circleci/android@1.0.3

commands:
  add-execution-permission:
    description: "Add execution permission to gradle"
    steps:
      - run: chmod +x ./gradlew

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.

  unit-test:
    executor: android/android-machine
    steps:
      - checkout
      - add-execution-permission
      - android/restore-gradle-cache
      # The next step will run the unit tests
      - android/run-tests:
          test-command: ./gradlew lint testDebug --continue
      - run:
            name: Save test results
            command: |
                mkdir -p ~/test-results/junit/
                find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
            when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  instrumented-test:
    executor:
      name: android/android-machine
      resource-class: xlarge

    steps:
      - checkout
      - add-execution-permission
      # Then start the emulator and run the Instrumentation tests!
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: system-images;android-32;google_apis;x86

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  automated-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.           
    jobs:
      - unit-test
      # 나중에 instrumented-test 추가


